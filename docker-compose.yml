version: "3.4"

networks:
  backend:
    driver: bridge

services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_LISTEN_PORT: 8001
    ports:
      - "8001:8001"
    depends_on:
      - postgres
    networks:
      - backend

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.1
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - xpack.security.enabled=false
    networks:
      - backend

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - backend

  redis:
    image: redis:6.0.7
    container_name: redis
    volumes:
      - redis_volume_data:/data
    ports:
      - 6379:6379
    networks:
      - backend

  redis_insight:
    image: redislabs/redisinsight:latest
    container_name: redis_insight
    ports:
      - 8002:8001
    volumes:
      - redis_insight_volume_data:/db
    networks:
      - backend

  account-svc:
    image: dihson103/account-svc:latest
    container_name: account-svc
    build:
      context: .
      dockerfile: Auction_Backend/AccountService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_URLS=http://+:7788
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgres;Database=accounts
      - ConnectionStrings__Redis=http://redis
      - Kestrel__Endpoints__Grpc__Protocols=Http2
      - Kestrel__Endpoints__Grpc__Url=http://+:7788
      - Kestrel__Endpoints__WebApi__Protocols=Http1
      - Kestrel__Endpoints__WebApi__Url=http://+:80
    ports:
      - 7003:80
      - 7788:7788
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - backend

  auction-svc:
    image: dihson103/auction-svc:latest
    container_name: auction-svc
    build:
      context: .
      dockerfile: Auction_Backend/AuctionService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_URLS=http://+:7777
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgres;Database=auctions
      - ConnectionStrings__Redis=http://redis
      - Kestrel__Endpoints__Grpc__Protocols=Http2
      - Kestrel__Endpoints__Grpc__Url=http://+:7777
      - Kestrel__Endpoints__WebApi__Protocols=Http1
      - Kestrel__Endpoints__WebApi__Url=http://+:80
    ports:
      - 7001:80
      - 7777:7777
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - backend

  bidding-svc:
    image: dihson103/bidding-svc:latest
    container_name: bidding-svc
    build:
      context: .
      dockerfile: Auction_Backend/BiddingService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgres;Database=biddings
      - ConnectionStrings__Redis=http://redis
      - GrpcAuction=http://auction-svc:7777
      - GrpcUser=http://account-svc:7788
    ports:
      - 7005:80
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - backend

  notification-svc:
    image: dihson103/notification-svc:latest
    container_name: notification-svc
    build:
      context: .
      dockerfile: Auction_Backend/NotificationService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
    ports:
      - 7006:80
    depends_on:
      - rabbitmq
    networks:
      - backend

  payment-svc:
    image: dihson103/payment-svc:latest
    container_name: payment-svc
    build:
      context: .
      dockerfile: Auction_Backend/PaymentService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgres;Database=payments
    ports:
      - 7004:80
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - backend

  search-svc:
    image: dihson103/search-svc:latest
    container_name: search-svc
    build:
      context: .
      dockerfile: Auction_Backend/SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ELKConfiguraion__Uri=http://elasticsearch:9200
      - ELKConfiguraion__index=auctions
      - AuctionServiceUrl=http://auction-svc:7001
    ports:
      - 7002:80
    depends_on:
      - rabbitmq
      - elasticsearch
    networks:
      - backend

  gateway-svc:
    image: dihson103/gateway-svc:latest
    container_name: gateway-svc
    build:
      context: .
      dockerfile: Auction_Backend/GatewayService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
    ports:
      - 6001:80
    networks:
      - backend

volumes:
  pgdata:
  elasticsearch-data:
  redis_volume_data:
  redis_insight_volume_data:
